Program . Program ::= Declarations Statements ;

PrimDecl . Declaration ::= "int" Ident ";" ;
ArrayDecl . Declaration ::= "int" "[" Integer "]" Ident ";" ;
RecordDecl . Declaration ::= "{" "int" "fst" ";" "int" "snd" "}" Ident ";" ;

DeclSeq . Declarations ::= Declaration Declarations ;
DeclNone . Declarations ::= ;

comment "/*" "*/" ;

Variable . ROVSuffix ::= Arith ;
Record . ROVSuffix ::= "(" Arith "," Arith ")" ;

Assignment . Statement ::= LValue ":=" Arith ";" ;
RecordOrVariable . Statement ::= Ident ":=" ROVSuffix ";" ; 
IfThen . Statement ::= "if" "(" Boolean ")" "{" Statements "}" ;
IfThenElse . Statement ::= "if" "(" Boolean ")" "{" Statements "}" "else" "{" Statements "}" ;
While . Statement ::= "while" "(" Boolean ")" "{" Statements "}" ;
ReadL . Statement ::= "read" LValue ";" ;
ReadI . Statement ::= "read" Ident ";" ;
Write . Statement ::= "write" Arith ";" ;

StatSeq . Statements ::= Statement Statements ;
StatNone . Statements ::= ;

Array . LValue ::= Ident "[" Arith "]" ;
RecordFst . LValue ::= Ident "." "fst" ;
RecordSnd . LValue ::= Ident "." "snd" ;

Lit . LitArith ::= Integer;
LitNeg . LitArith ::= "-" Integer;

Literal . Arith ::= LitArith ;
VariableR . Arith ::= Ident ;
ArrayR . Arith ::= Ident "[" Arith "]" ;
RecordFstR . Arith ::= Ident "." "fst" ;
RecordSndR . Arith ::= Ident "." "snd" ;
AppArith . Arith ::= Arith OpA Arith ;
Parens . Arith ::= "(" Arith ")" ;

True . Boolean ::= "true" ;
False . Boolean ::= "false" ;
AppRel . Boolean ::= Arith OpRel Arith ;
AppBoolean . Boolean ::= Boolean OpBoolean Boolean ;
Not . Boolean ::= "not" Boolean ;

Plus . OpA ::= "+" ;
Minus . OpA ::= "-" ;
Mult . OpA ::= "*" ;
Div . OpA ::= "/" ;

LT . OpRel ::= "<";
LTE . OpRel ::= "<=";
GT . OpRel ::= ">";
GTE . OpRel ::= ">=";
EQ . OpRel ::= "==";
NEQ . OpRel ::= "!=";

And . OpBoolean ::= "&";
Or . OpBoolean ::= "|";
